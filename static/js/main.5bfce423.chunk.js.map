{"version":3,"sources":["components/serche.jsx","components/weather.jsx","App.js","index.js"],"names":["WeatherLogo","styled","img","ChooseCityLable","span","SercheBox","form","Serche","setCity","fetchWeather","src","onSubmit","onChange","e","target","value","placeholder","name","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","WeatherIcons","WeatherContainer","div","Condition","WeatherInfoLabel","WeatherIcon","Location","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","Weather","weather","console","log","timeStamp","isDay","icon","includes","main","temp","description","sys","country","Date","getHours","getMinutes","speed","Container","Label","App","useState","city","setWeather","a","preventDefault","axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bfce423.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst WeatherLogo = styled.img`\r\n    width: 140px;\r\n    height: 140px;\r\n    margin: 40px auto;\r\n`;\r\n\r\nconst ChooseCityLable = styled.span`\r\n  color: black;\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n  margin: 10px auto;\r\n`;\r\nconst SercheBox = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  border: 1px solid black;\r\n  border-radius: 2px;\r\n  colors: black;\r\n  margin: 18px auto;\r\n\r\n  & input {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    border: none;\r\n    outline: none;\r\n  }\r\n  & button {\r\n    color: white;\r\n    background-color: black;\r\n    padding: 6px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n  }\r\n  & button:hover {\r\n    background-color: gray;\r\n    transition: all 0.2s;\r\n  }\r\n`;\r\n\r\nconst Serche = ({ setCity, fetchWeather }) => {\r\n  return (\r\n    <>\r\n      <WeatherLogo src=\"/icons/day.svg\" />\r\n      <ChooseCityLable>Find Weather of your city </ChooseCityLable>\r\n      <SercheBox onSubmit={fetchWeather}>\r\n        <input\r\n          onChange={(e) => setCity(e.target.value)}\r\n          placeholder=\"City\"\r\n          name=\"city\"\r\n        ></input>\r\n        \r\n        <button type=\"submit\">Serche</button>\r\n      </SercheBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Serche;\r\n","import styled from \"styled-components\";\r\n\r\nexport const WeatherInfoIcons = {\r\n  sunset: \"./icons/temp.svg\",\r\n  sunrise: \"./icons/temp.svg\",\r\n  humidity: \"./icons/humidity.svg\",\r\n  wind: \"./icons/wind.svg\",\r\n  pressure: \"./icons/pressure.svg\",\r\n};\r\n\r\nexport const WeatherIcons = {\r\n  \"01d\": \"/icons/sunny.svg\",\r\n  \"01n\": \"/icons/night.svg\",\r\n  \"02d\": \"/icons/day.svg\",\r\n  \"02n\": \"/icons/cloudy-night.svg\",\r\n  \"03d\": \"/icons/cloudy.svg\",\r\n  \"03n\": \"/icons/cloudy.svg\",\r\n  \"04d\": \"/icons/perfect-day.svg\",\r\n  \"04n\": \"/icons/cloudy-night.svg\",\r\n  \"09d\": \"/icons/rain.svg\",\r\n  \"09n\": \"/icons/rain-night.svg\",\r\n  \"10d\": \"/icons/rain.svg\",\r\n  \"10n\": \"/icons/rain-night.svg\",\r\n  \"11d\": \"/icons/storm.svg\",\r\n  \"11n\": \"/icons/storm.svg\",\r\n};\r\n\r\nconst WeatherContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  margin: 25px auto;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Condition = styled.span`\r\n  margin: 20px auto;\r\n  text-transform: capitalize;\r\n  font-size: 14px;\r\n  & span {\r\n    font-size: 28px;\r\n  }\r\n`;\r\nconst WeatherInfoLabel = styled.span`\r\n  margin: 10px 25px 10px;\r\n  text-transform: capitalize;\r\n  text-align: start;\r\n  width: 80%;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n`;\r\nconst WeatherIcon = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 5px auto;\r\n`;\r\nconst Location = styled.span`\r\n  margin: 15px auto;\r\n  text-transform: capitalize;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n`;\r\nconst WeatherInfoContainer = styled.div`\r\n  display: flex;\r\n  width: 80%;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  margin: 10px 20px;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\nconst InfoIcon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n`;\r\nconst InfoLabel = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  & span {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\nconst WeatherInfoComponent = ({name, value}) => {\r\n    return (\r\n      <InfoContainer>\r\n        <InfoIcon src={WeatherInfoIcons[name]} />\r\n        <InfoLabel>\r\n          {value}\r\n          <span>{name}</span>\r\n        </InfoLabel>\r\n      </InfoContainer>\r\n    );\r\n}\r\n\r\nconst Weather = ({weather}) => {\r\n    console.log(weather);\r\n    const isDay = weather?.weather[0].icon?.includes('d');\r\n    const getTime = (timeStamp) => {\r\n        return (\r\n            `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\r\n        )\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <WeatherContainer>\r\n        <Condition>\r\n          <span>{weather?.main?.temp} Â°C</span>\r\n          {` | ${weather?.weather[0]?.description} `}\r\n        </Condition>\r\n        <WeatherIcon src={WeatherIcons[weather?.weather[0].icon]} />\r\n      </WeatherContainer>\r\n\r\n      <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\r\n      <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\r\n\r\n      <WeatherInfoContainer>\r\n        <WeatherInfoComponent\r\n          name={isDay ? \"sunset\" : \"sunrise\"}\r\n          value={getTime(weather.sys[isDay ? \"sunset\" : \"sunrise\"])}\r\n        />\r\n        <WeatherInfoComponent name=\"wind\" value={weather?.main?.humidity} />\r\n        <WeatherInfoComponent name=\"humidity\" value={weather?.wind?.speed} />\r\n        <WeatherInfoComponent name=\"pressure\" value={weather?.main?.pressure} />\r\n      </WeatherInfoContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import { useState } from 'react'\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nimport Serche from \"./components/serche\";\nimport WeatherInfo from \"./components/weather\";\n\n\nconst API = '73550ee673f4906d417f4a7ac2ff2e22'\n\nconst Container = styled.div`\n  display:flex;\n  flex-direction:column;\n  width: 550px;\n  margin: auto;\n  align-items: center;\n  box-shadow: 0 3px 6px 0 #555\n  // padding: 20px 10px;\n  // border-radius: 3px\n`;\n\nconst Label = styled.span`\n    color: black;\n    margin: 10px auto;\n    font-size: 22px;\n    font-weight: bold\n`; \n\n\nfunction App() {\n  const [city, setCity] = useState();\n  const [weather, setWeather] = useState();\n\n  const fetchWeather = async(e) => {\n    e.preventDefault();\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API}&units=metric`);\n    setWeather(response.data)\n  };\n\n  return (\n    <Container>\n      <Label>Weather App</Label>\n      {weather ? (\n        <WeatherInfo weather={weather} /> ) : ( \n        <Serche setCity={setCity} fetchWeather={fetchWeather} /> \n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}